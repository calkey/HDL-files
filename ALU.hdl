// This file is part of coursework 2 for COMP1212
// which follows the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// Written by Sam Wilson


/**
 * The ALU. Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs,
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 * The bit-combinations that yield each function are
 * documented in the book. In addition, the ALU
 * computes two 1-bit outputs: if the ALU output
 * is 0, zr is set to 1; otherwise zr is set to 0;
 * If out<0, ng is set to 1; otherwise ng is set to 0.
 */

CHIP ALU {
    IN x[16], y[16], zx, nx, zy, ny, f, no;
    OUT out[16], zr, ng;
    //zx zeros input
    //nx negate x input
    //zy zero y input
    //ny negate y input
    //f select between 'and'(0) and 'plus'(1)
    //no negate output

    PARTS:
    Mux16(x=x, y=false, sel=zx, out=tempx1);
    Not16(x=tempx1, out=tempx2);
    Mux16(x=tempx1, y=tempx2, sel=nx, out=tempx3);

    Mux16(x=y, y=false, sel=zy, out=tempy1);
    Not16(x=tempy1, out=tempy2);
    Mux16(x=tempy1, y=tempy2, sel=ny, out=tempy3);

    Add16(x=tempx3, y=tempy3, out=fAdd);
    And16(x=tempx3, y=tempy3, out=fAnd);
    Mux16(x=fAnd, y=fAdd, sel=f, out=fOut);

    Not16(x=fOut, out=temp1);
    Mux16(x=fOut, y=temp1, sel=no, out[0..7]=zeroCheck1, out[8..15]=zeroCheck2, out[15]=ng, out=out);

    Or8Way(x=zeroCheck1, out=zeroCheckOut1);
    Or8Way(x=zeroCheck2, out=zeroCheckOut2);
    Or(x=zeroCheckOut1, y=zeroCheckOut2, out=xyz);
    Not(x=xyz, out=zr);








}
